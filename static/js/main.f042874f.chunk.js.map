{"version":3,"sources":["reducers/todos.js","actions/index.js","reducers/visibilityFilter.js","reducers/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","index.js"],"names":["todos","state","action","type","id","text","completed","map","todo","nextTodoId","VisibilityFilters","visibilityFilter","filter","combineReducers","Link","active","children","onClick","disabled","style","marginLeft","connect","ownProps","dispatch","Footer","FilterLink","input","onSubmit","e","preventDefault","value","trim","ref","node","Todo","textDecoration","TodoList","toggleTodo","getVisibleTodos","t","Error","App","VisibleTodoList","store","createStore","rootReducer","render","document","getElementById"],"mappings":"mNAsBeA,EAtBD,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACpC,OAAQA,EAAOC,MACb,IAAK,WACH,MAAM,GAAN,mBACKF,GADL,CAEE,CACEG,GAAIF,EAAOE,GACXC,KAAMH,EAAOG,KACbC,WAAW,KAGjB,IAAK,cACH,OAAOL,EAAMM,KAAI,SAAAC,GAAI,OAClBA,EAAKJ,KAAOF,EAAOE,GAApB,YAAC,eACOI,GADR,IACcF,WAAYE,EAAKF,YAC3BE,KAER,QACE,OAAOP,IClBTQ,EAAa,EAiBJC,EACD,WADCA,EAEK,iBAFLA,EAGE,cCTAC,EATU,WAAiD,IAAhDV,EAA+C,uDAAvCS,EAA4BR,EAAW,uCACvE,OAAQA,EAAOC,MACb,IAAK,wBACH,OAAOD,EAAOU,OAChB,QACE,OAAOX,ICHEY,cAAgB,CAC7Bb,QACAW,qBCeaG,G,MAlBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,QAArB,OACT,wBACGA,QAASA,EACTC,SAAUH,EACVI,MAAO,CACHC,WAAY,OAJnB,SAOGJ,MCCQK,eARS,SAACpB,EAAOqB,GAAR,MAAsB,CAC5CP,OAAQO,EAASV,SAAWX,EAAMU,qBAGT,SAACY,EAAUD,GAAX,MAAyB,CAClDL,QAAS,kBAAMM,EJF6B,CAC5CpB,KAAM,wBACNS,OIA4CU,EAASV,aAGxCS,CAGbP,GCIaU,EAfA,kBACb,gCACE,0CACA,cAACC,EAAD,CAAYb,OAAQF,EAApB,iBAGA,cAACe,EAAD,CAAYb,OAAQF,EAApB,oBAGA,cAACe,EAAD,CAAYb,OAAQF,EAApB,2BCaWW,iBAtBC,SAAC,GAAkB,IAC7BK,EADaH,EAAe,EAAfA,SAGjB,OACE,8BACE,uBAAMI,SAAU,SAAAC,GNRC,IAAAvB,GMSfuB,EAAEC,iBACGH,EAAMI,MAAMC,UAGjBR,GNbelB,EMaEqB,EAAMI,MNbC,CAC9B3B,KAAM,WACNC,GAAIK,IACJJ,UMWMqB,EAAMI,MAAQ,KANhB,UAQE,uBAAOE,IAAK,SAAAC,GAAI,OAAIP,EAAQO,KAC5B,wBAAQ9B,KAAK,SAAb,8BCEO+B,EAjBF,SAAC,GAAD,IAAGjB,EAAH,EAAGA,QAASX,EAAZ,EAAYA,UAAWD,EAAvB,EAAuBA,KAAvB,OACX,oBACEY,QAASA,EACTE,MAAO,CACLgB,eAAgB7B,EAAY,eAAiB,QAHjD,SAMGD,KCeU+B,EArBE,SAAC,GAAD,IAAGpC,EAAH,EAAGA,MAAOqC,EAAV,EAAUA,WAAV,OACf,6BACGrC,EAAMO,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,2BAEMA,GAFN,IAGES,QAAS,kBAAMoB,EAAW7B,EAAKJ,OAF1BI,EAAKJ,UCHZkC,EAAkB,SAACtC,EAAOY,GAC9B,OAAQA,GACN,KAAKF,EACH,OAAOV,EACT,KAAKU,EACH,OAAOV,EAAMY,QAAO,SAAA2B,GAAC,OAAIA,EAAEjC,aAC7B,KAAKI,EACH,OAAOV,EAAMY,QAAO,SAAA2B,GAAC,OAAKA,EAAEjC,aAC9B,QACE,MAAM,IAAIkC,MAAM,mBAAqB5B,KAY5BS,eARS,SAAApB,GAAK,MAAK,CAChCD,MAAOsC,EAAgBrC,EAAMD,MAAOC,EAAMU,sBAGjB,SAAAY,GAAQ,MAAK,CACtCc,WAAY,SAAAjC,GAAE,OAAImB,ETXM,SAAAnB,GAAE,MAAK,CAC/BD,KAAM,cACNC,MSS2BiC,CAAWjC,QAGzBiB,CAGbe,GChBaK,EARH,kBACV,gCACE,cAAC,EAAD,IACA,cAACC,EAAD,IACA,cAAC,EAAD,QCDEC,EAAQC,YAAYC,GAE1BC,iBACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.f042874f.chunk.js","sourcesContent":["const todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n    case 'TOGGLE_TODO':\r\n      return state.map(todo =>\r\n        (todo.id === action.id)\r\n          ? {...todo, completed: !todo.completed}\r\n          : todo\r\n      )\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todos","let nextTodoId = 0\r\nexport const addTodo = text => ({\r\n  type: 'ADD_TODO',\r\n  id: nextTodoId++,\r\n  text\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: 'SET_VISIBILITY_FILTER',\r\n  filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n  type: 'TOGGLE_TODO',\r\n  id\r\n})\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}","import { VisibilityFilters } from '../actions'\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n})","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Link = ({ active, children, onClick }) => (\r\n    <button\r\n       onClick={onClick}\r\n       disabled={active}\r\n       style={{\r\n           marginLeft: '4px',\r\n       }}\r\n    >\r\n      {children}\r\n    </button>\r\n)\r\n\r\nLink.propTypes = {\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Link","import { connect } from 'react-redux'\r\nimport { setVisibilityFilter } from '../actions'\r\nimport Link from '../components/Link'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Link)","import React from 'react'\r\nimport FilterLink from '../containers/FilterLink'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst Footer = () => (\r\n  <div>\r\n    <span>Show: </span>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>\r\n      All\r\n    </FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\r\n      Active\r\n    </FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\r\n      Completed\r\n    </FilterLink>\r\n  </div>\r\n)\r\n\r\nexport default Footer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  let input\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => {\r\n        e.preventDefault()\r\n        if (!input.value.trim()) {\r\n          return\r\n        }\r\n        dispatch(addTodo(input.value))\r\n        input.value = ''\r\n      }}>\r\n        <input ref={node => input = node} />\r\n        <button type=\"submit\">\r\n          Add Todo\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(AddTodo)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n  <li\r\n    onClick={onClick}\r\n    style={{\r\n      textDecoration: completed ? 'line-through' : 'none'\r\n    }}\r\n  >\r\n    {text}\r\n  </li>\r\n)\r\n\r\nTodo.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => (\r\n  <ul>\r\n    {todos.map(todo =>\r\n      <Todo\r\n        key={todo.id}\r\n        {...todo}\r\n        onClick={() => toggleTodo(todo.id)}\r\n      />\r\n    )}\r\n  </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n  }).isRequired).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import { connect } from 'react-redux'\r\nimport { toggleTodo } from '../actions'\r\nimport TodoList from '../components/TodoList'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter(t => t.completed)\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter(t => !t.completed)\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList)","import React from 'react'\r\nimport Footer from './Footer'\r\nimport AddTodo from '../containers/AddTodo'\r\nimport VisibleTodoList from '../containers/VisibleTodoList'\r\n\r\nconst App = () => (\r\n  <div>\r\n    <AddTodo />\r\n    <VisibleTodoList />\r\n    <Footer />\r\n  </div>\r\n)\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}